#include "Arduino.h"
#include "ModuleOsc.h"
#include "Defines.h"

#define SAMPLE_RATE 44100.0
#define SAMPLES_PER_CYCLE 512
#define SAMPLES_PER_CYCLE_FIXEDPOINT (SAMPLES_PER_CYCLE<<20)
#define TICKS_PER_CYCLE (float)((float)SAMPLES_PER_CYCLE_FIXEDPOINT/(float)SAMPLE_RATE)

ModuleOsc::ModuleOsc()
{
  fixed_point_10_22_index = 0;
    
  // Ramp wavetable
  wavetables[0] = { 0,7,15,23,31,39,47,55,63,71,79,87,95,103,111,119,127,135,143,151,159,167,175,183,191,199,207,215,223,231,239,247,255,263,271,279,287,295,303,311,319,327,335,343,351,359,367,375,383,391,399,407,415,423,431,439,447,455,463,471,479,487,495,503,511,519,527,535,543,551,559,567,575,583,591,599,607,615,623,631,639,647,655,663,671,679,687,695,703,711,719,727,735,743,751,759,767,775,783,791,799,807,815,823,831,839,847,855,863,871,879,887,895,903,911,919,927,935,943,951,959,967,975,983,991,999,1007,1015,1023,1031,1039,1047,1055,1063,1071,1079,1087,1095,1103,1111,1119,1127,1135,1143,1151,1159,1167,1175,1183,1191,1199,1207,1215,1223,1231,1239,1247,1255,1263,1271,1279,1287,1295,1303,1311,1319,1327,1335,1343,1351,1359,1367,1375,1383,1391,1399,1407,1415,1423,1431,1439,1447,1455,1463,1471,1479,1487,1495,1503,1511,1519,1527,1535,1543,1551,1559,1567,1575,1583,1591,1599,1607,1615,1623,1631,1639,1647,1655,1663,1671,1679,1687,1695,1703,1711,1719,1727,1735,1743,1751,1759,1767,1775,1783,1791,1799,1807,1815,1823,1831,1839,1847,1855,1863,1871,1879,1887,1895,1903,1911,1919,1927,1935,1943,1951,1959,1967,1975,1983,1991,1999,2007,2015,2023,2031,2039,2047,2055,2063,2071,2079,2087,2095,2103,2111,2119,2127,2135,2143,2151,2159,2167,2175,2183,2191,2199,2207,2215,2223,2231,2239,2247,2255,2263,2271,2279,2287,2295,2303,2311,2319,2327,2335,2343,2351,2359,2367,2375,2383,2391,2399,2407,2415,2423,2431,2439,2447,2455,2463,2471,2479,2487,2495,2503,2511,2519,2527,2535,2543,2551,2559,2567,2575,2583,2591,2599,2607,2615,2623,2631,2639,2647,2655,2663,2671,2679,2687,2695,2703,2711,2719,2727,2735,2743,2751,2759,2767,2775,2783,2791,2799,2807,2815,2823,2831,2839,2847,2855,2863,2871,2879,2887,2895,2903,2911,2919,2927,2935,2943,2951,2959,2967,2975,2983,2991,2999,3007,3015,3023,3031,3039,3047,3055,3063,3071,3079,3087,3095,3103,3111,3119,3127,3135,3143,3151,3159,3167,3175,3183,3191,3199,3207,3215,3223,3231,3239,3247,3255,3263,3271,3279,3287,3295,3303,3311,3319,3327,3335,3343,3351,3359,3367,3375,3383,3391,3399,3407,3415,3423,3431,3439,3447,3455,3463,3471,3479,3487,3495,3503,3511,3519,3527,3535,3543,3551,3559,3567,3575,3583,3591,3599,3607,3615,3623,3631,3639,3647,3655,3663,3671,3679,3687,3695,3703,3711,3719,3727,3735,3743,3751,3759,3767,3775,3783,3791,3799,3807,3815,3823,3831,3839,3847,3855,3863,3871,3879,3887,3895,3903,3911,3919,3927,3935,3943,3951,3959,3967,3975,3983,3991,3999,4007,4015,4023,4031,4039,4047,4055,4063,4071,4079,4087 };

  // Triangle wavetable
  wavetables[1] = { 0,15,31,47,63,79,95,111,127,143,159,175,191,207,223,239,255,271,287,303,319,335,351,367,383,399,415,431,447,463,479,495,511,527,543,559,575,591,607,623,639,655,671,687,703,719,735,751,767,783,799,815,831,847,863,879,895,911,927,943,959,975,991,1007,1023,1039,1055,1071,1087,1103,1119,1135,1151,1167,1183,1199,1215,1231,1247,1263,1279,1295,1311,1327,1343,1359,1375,1391,1407,1423,1439,1455,1471,1487,1503,1519,1535,1551,1567,1583,1599,1615,1631,1647,1663,1679,1695,1711,1727,1743,1759,1775,1791,1807,1823,1839,1855,1871,1887,1903,1919,1935,1951,1967,1983,1999,2015,2031,2047,2063,2079,2095,2111,2127,2143,2159,2175,2191,2207,2223,2239,2255,2271,2287,2303,2319,2335,2351,2367,2383,2399,2415,2431,2447,2463,2479,2495,2511,2527,2543,2559,2575,2591,2607,2623,2639,2655,2671,2687,2703,2719,2735,2751,2767,2783,2799,2815,2831,2847,2863,2879,2895,2911,2927,2943,2959,2975,2991,3007,3023,3039,3055,3071,3087,3103,3119,3135,3151,3167,3183,3199,3215,3231,3247,3263,3279,3295,3311,3327,3343,3359,3375,3391,3407,3423,3439,3455,3471,3487,3503,3519,3535,3551,3567,3583,3599,3615,3631,3647,3663,3679,3695,3711,3727,3743,3759,3775,3791,3807,3823,3839,3855,3871,3887,3903,3919,3935,3951,3967,3983,3999,4015,4031,4047,4063,4079,4096,4081,4065,4049,4033,4017,4001,3985,3969,3953,3937,3921,3905,3889,3873,3857,3841,3825,3809,3793,3777,3761,3745,3729,3713,3697,3681,3665,3649,3633,3617,3601,3585,3569,3553,3537,3521,3505,3489,3473,3457,3441,3425,3409,3393,3377,3361,3345,3329,3313,3297,3281,3265,3249,3233,3217,3201,3185,3169,3153,3137,3121,3105,3089,3073,3057,3041,3025,3009,2993,2977,2961,2945,2929,2913,2897,2881,2865,2849,2833,2817,2801,2785,2769,2753,2737,2721,2705,2689,2673,2657,2641,2625,2609,2593,2577,2561,2545,2529,2513,2497,2481,2465,2449,2433,2417,2401,2385,2369,2353,2337,2321,2305,2289,2273,2257,2241,2225,2209,2193,2177,2161,2145,2129,2113,2097,2081,2065,2049,2033,2017,2001,1985,1969,1953,1937,1921,1905,1889,1873,1857,1841,1825,1809,1793,1777,1761,1745,1729,1713,1697,1681,1665,1649,1633,1617,1601,1585,1569,1553,1537,1521,1505,1489,1473,1457,1441,1425,1409,1393,1377,1361,1345,1329,1313,1297,1281,1265,1249,1233,1217,1201,1185,1169,1153,1137,1121,1105,1089,1073,1057,1041,1025,1009,993,977,961,945,929,913,897,881,865,849,833,817,801,785,769,753,737,721,705,689,673,657,641,625,609,593,577,561,545,529,513,497,481,465,449,433,417,401,385,369,353,337,321,305,289,273,257,241,225,209,193,177,161,145,129,113,97,81,65,49,33,17 };

  // Create frequency increments table
  for(uint32_t i=0; i < 128; i++)
  {
    float frequency = ((pow(2.0,(i-69.0)/12.0)) * 440.0);
    increments[i] = frequency * TICKS_PER_CYCLE;
  }
}

uint32_t ModuleOsc::run()
{  
  // Read the frequency
  // Convert the standard 12 bit CV value to a 7-bit value, which ranges from 0 to 127
  frequency = this->frequency_input->run() >> 5;  
  
  // Read the wavetable input and map it to the appropriate range
  // TODO: Once the number of wavetables is known, remove this map function
  // and bitshift the input down to the correct range.
  wavetable = this->wavetable_input->run();
  wavetable = map(wavetable, 0, MAX_CV, 0, 1);
  
  // Calculate the index into the wavetable
  fixed_point_10_22_index += increments[frequency];
  if(fixed_point_10_22_index > (WAVE_SAMPLES << 22)) fixed_point_10_22_index -= (WAVE_SAMPLES << 22);
  wavetable_index = fixed_point_10_22_index >> 22; // This should yeald a value between 0 and WAVE_SAMPLES
  
  // This output will range from 0 to 4095 (which is a 12-bit value)
  return(wavetables[wavetable][wavetable_index]);
}
